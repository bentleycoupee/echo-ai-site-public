"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[207],{7038:(e,t,r)=>{var n=r(4290);r.o(n,"usePathname")&&r.d(t,{usePathname:function(){return n.usePathname}}),r.o(n,"useRouter")&&r.d(t,{useRouter:function(){return n.useRouter}}),r.o(n,"useSelectedLayoutSegments")&&r.d(t,{useSelectedLayoutSegments:function(){return n.useSelectedLayoutSegments}})},9161:(e,t,r)=>{r.d(t,{N:()=>u,Z:()=>o});var n=r(5971),i=r(2970);let s=(0,n.createContext)(void 0);function o(){let e=(0,n.useContext)(s);if(void 0===e)throw Error("Could not find `ConvexProviderWithAuth` (or `ConvexProviderWithClerk` or `ConvexProviderWithAuth0`) as an ancestor component. This component may be missing, or you might have two instances of the `convex/react` module loaded in your project.");return e}function u({children:e,client:t,useAuth:r}){let{isLoading:o,isAuthenticated:u,fetchAccessToken:l}=r(),[h,d]=(0,n.useState)(null);return o&&null!==h&&d(null),o||u||!1===h||d(!1),n.createElement(s.Provider,{value:{isLoading:null===h,isAuthenticated:u&&(h??!1)}},n.createElement(c,{authProviderAuthenticated:u,fetchAccessToken:l,authProviderLoading:o,client:t,setIsConvexAuthenticated:d}),n.createElement(i.hD,{client:t},e),n.createElement(a,{authProviderAuthenticated:u,fetchAccessToken:l,authProviderLoading:o,client:t,setIsConvexAuthenticated:d}))}function c({authProviderAuthenticated:e,fetchAccessToken:t,authProviderLoading:r,client:i,setIsConvexAuthenticated:s}){return(0,n.useEffect)(()=>{let r=!0;if(e)return i.setAuth(t,e=>{r&&s(()=>e)}),()=>{r=!1,s(e=>!e&&null)}},[e,t,r,i,s]),null}function a({authProviderAuthenticated:e,fetchAccessToken:t,authProviderLoading:r,client:i,setIsConvexAuthenticated:s}){return(0,n.useEffect)(()=>{if(e)return()=>{i.clearAuth(),s(()=>null)}},[e,t,r,i,s]),null}},2970:(e,t,r)=>{r.d(t,{BN:()=>p,IT:()=>m,eH:()=>y,hD:()=>g,n_:()=>b});var n=r(5568),i=r(5971),s=r(4752),o=r(3314),u=r(2273),c=r(9839),a=r(5757),l=r(5801),h=Object.defineProperty,d=(e,t,r)=>t in e?h(e,t,{enumerable:!0,configurable:!0,writable:!0,value:r}):e[t]=r,f=(e,t,r)=>d(e,"symbol"!=typeof t?t+"":t,r);if(void 0===i)throw Error("Required dependency 'react' not found");if(void 0===o)throw Error("Required dependency 'react-dom' not found");class y{constructor(e,t){if(f(this,"address"),f(this,"cachedSync"),f(this,"listeners"),f(this,"options"),f(this,"closed",!1),f(this,"_logger"),f(this,"adminAuth"),f(this,"fakeUserIdentity"),void 0===e)throw Error("No address provided to ConvexReactClient.\nIf trying to deploy to production, make sure to follow all the instructions found at https://docs.convex.dev/production/hosting/\nIf running locally, make sure to run `convex dev` and ensure the .env.local file is populated.");if("string"!=typeof e)throw Error(`ConvexReactClient requires a URL like 'https://happy-otter-123.convex.cloud', received something of type ${typeof e} instead.`);if(!e.includes("://"))throw Error("Provided address was not an absolute URL.");this.address=e,this.listeners=new Map,this._logger=t?.logger??(0,l.y4)({verbose:t?.verbose??!1}),this.options={...t,logger:this._logger}}get sync(){if(this.closed)throw Error("ConvexReactClient has already been closed.");return this.cachedSync||(this.cachedSync=new n.sd(this.address,e=>this.transition(e),this.options),this.adminAuth&&this.cachedSync.setAdminAuth(this.adminAuth,this.fakeUserIdentity)),this.cachedSync}setAuth(e,t){if("string"==typeof e)throw Error("Passing a string to ConvexReactClient.setAuth is no longer supported, please upgrade to passing in an async function to handle reauthentication.");this.sync.setAuth(e,t??(()=>{}))}clearAuth(){this.sync.clearAuth()}setAdminAuth(e,t){if(this.adminAuth=e,this.fakeUserIdentity=t,this.closed)throw Error("ConvexReactClient has already been closed.");this.cachedSync&&this.sync.setAdminAuth(e,t)}watchQuery(e,...t){let[r,n]=t,i=(0,a.qQ)(e);return{onUpdate:e=>{let{queryToken:t,unsubscribe:s}=this.sync.subscribe(i,r,n),o=this.listeners.get(t);return void 0!==o?o.add(e):this.listeners.set(t,new Set([e])),()=>{if(this.closed)return;let r=this.listeners.get(t);r.delete(e),0===r.size&&this.listeners.delete(t),s()}},localQueryResult:()=>{if(this.cachedSync)return this.cachedSync.localQueryResult(i,r)},localQueryLogs:()=>{if(this.cachedSync)return this.cachedSync.localQueryLogs(i,r)},journal:()=>{if(this.cachedSync)return this.cachedSync.queryJournal(i,r)}}}mutation(e,...t){let[r,n]=t,i=(0,a.qQ)(e);return this.sync.mutation(i,r,n)}action(e,...t){let r=(0,a.qQ)(e);return this.sync.action(r,...t)}query(e,...t){let r=this.watchQuery(e,...t),n=r.localQueryResult();return void 0!==n?Promise.resolve(n):new Promise((e,t)=>{let n=r.onUpdate(()=>{n();try{e(r.localQueryResult())}catch(e){t(e)}})})}connectionState(){return this.sync.connectionState()}get logger(){return this._logger}async close(){if(this.closed=!0,this.listeners=new Map,this.cachedSync){let e=this.cachedSync;this.cachedSync=void 0,await e.close()}}transition(e){o.unstable_batchedUpdates(()=>{for(let t of e){let e=this.listeners.get(t);if(e)for(let t of e)t()}})}}let v=i.createContext(void 0);function p(){return(0,i.useContext)(v)}let g=({client:e,children:t})=>i.createElement(v.Provider,{value:e},t);function m(e,...t){let r="skip"===t[0],n="skip"===t[0]?{}:(0,c.Zy)(t[0]),o="string"==typeof e?(0,a.Gg)(e):e,l=(0,a.qQ)(o),h=(0,i.useMemo)(()=>r?{}:{query:{query:o,args:n}},[JSON.stringify((0,s.rz)(n)),l,r]),d=(0,u.E)(h).query;if(d instanceof Error)throw d;return d}function b(e){let t="string"==typeof e?(0,a.Gg)(e):e,r=(0,i.useContext)(v);if(void 0===r)throw Error("Could not find Convex client! `useMutation` must be used in the React component tree under `ConvexProvider`. Did you forget it? See https://docs.convex.dev/quick-start#set-up-convex-in-your-react-app");return(0,i.useMemo)(()=>(function e(t,r,n){function i(e){return function(e){if("object"==typeof e&&null!==e&&"bubbles"in e&&"persist"in e&&"isDefaultPrevented"in e)throw Error("Convex function called with SyntheticEvent object. Did you use a Convex function as an event handler directly? Event handlers like onClick receive an event object as their first argument. These SyntheticEvent objects are not valid Convex values. Try wrapping the function like `const handler = () => myMutation();` and using `handler` in the event handler.")}(e),r.mutation(t,e,{optimisticUpdate:n})}return i.withOptimisticUpdate=function(i){if(void 0!==n)throw Error(`Already specified optimistic update for mutation ${(0,a.qQ)(t)}`);return e(t,r,i)},i})(t,r),[r,(0,a.qQ)(t)])}},9266:(e,t,r)=>{r.d(t,{Yz:()=>o,eH:()=>i.eH,n_:()=>i.n_,IT:()=>i.IT});var n=r(5971);r(4752),r(2273),r(5757);var i=r(2970),s=r(9161);function o({children:e}){let{isLoading:t,isAuthenticated:r}=(0,s.Z)();return t||!r?null:n.createElement(n.Fragment,null,e)}r(4652)},2273:(e,t,r)=>{r.d(t,{E:()=>d});var n=r(5971),i=r(2970),s=r(4752),o=r(5757),u=Object.defineProperty,c=(e,t,r)=>t in e?u(e,t,{enumerable:!0,configurable:!0,writable:!0,value:r}):e[t]=r,a=(e,t,r)=>c(e,"symbol"!=typeof t?t+"":t,r);class l{constructor(e){a(this,"createWatch"),a(this,"queries"),a(this,"listeners"),this.createWatch=e,this.queries={},this.listeners=new Set}setQueries(e){for(let t of Object.keys(e)){let{query:r,args:n}=e[t];if((0,o.qQ)(r),void 0===this.queries[t])this.addQuery(t,r,n);else{let e=this.queries[t];((0,o.qQ)(r)!==(0,o.qQ)(e.query)||JSON.stringify((0,s.rz)(n))!==JSON.stringify((0,s.rz)(e.args)))&&(this.removeQuery(t),this.addQuery(t,r,n))}}for(let t of Object.keys(this.queries))void 0===e[t]&&this.removeQuery(t)}subscribe(e){return this.listeners.add(e),()=>{this.listeners.delete(e)}}getLocalResults(e){let t={};for(let r of Object.keys(e)){let n;let{query:i,args:s}=e[r];(0,o.qQ)(i);let u=this.createWatch(i,s);try{n=u.localQueryResult()}catch(e){if(e instanceof Error)n=e;else throw e}t[r]=n}return t}setCreateWatch(e){for(let t of(this.createWatch=e,Object.keys(this.queries))){let{query:e,args:r,watch:n}=this.queries[t],i=n.journal();this.removeQuery(t),this.addQuery(t,e,r,i)}}destroy(){for(let e of Object.keys(this.queries))this.removeQuery(e);this.listeners=new Set}addQuery(e,t,r,n){if(void 0!==this.queries[e])throw Error(`Tried to add a new query with identifier ${e} when it already exists.`);let i=this.createWatch(t,r,n),s=i.onUpdate(()=>this.notifyListeners());this.queries[e]={query:t,args:r,watch:i,unsubscribe:s}}removeQuery(e){let t=this.queries[e];if(void 0===t)throw Error(`No query found with identifier ${e}.`);t.unsubscribe(),delete this.queries[e]}notifyListeners(){for(let e of this.listeners)e()}}var h=r(4652);function d(e){let t=(0,i.BN)();if(void 0===t)throw Error("Could not find Convex client! `useQuery` must be used in the React component tree under `ConvexProvider`. Did you forget it? See https://docs.convex.dev/quick-start#set-up-convex-in-your-react-app");return function(e,t){let[r]=(0,n.useState)(()=>new l(t));r.createWatch!==t&&r.setCreateWatch(t),(0,n.useEffect)(()=>()=>r.destroy(),[r]);let i=(0,n.useMemo)(()=>({getCurrentValue:()=>r.getLocalResults(e),subscribe:t=>(r.setQueries(e),r.subscribe(t))}),[r,e]);return(0,h.R)(i)}(e,(0,n.useMemo)(()=>(e,r,n)=>t.watchQuery(e,r,{journal:n}),[t]))}},4652:(e,t,r)=>{r.d(t,{R:()=>i});var n=r(5971);function i({getCurrentValue:e,subscribe:t}){let[r,i]=(0,n.useState)(()=>({getCurrentValue:e,subscribe:t,value:e()})),s=r.value;return(r.getCurrentValue!==e||r.subscribe!==t)&&(s=e(),i({getCurrentValue:e,subscribe:t,value:s})),(0,n.useEffect)(()=>{let r=!1,n=()=>{r||i(r=>{if(r.getCurrentValue!==e||r.subscribe!==t)return r;let n=e();return r.value===n?r:{...r,value:n}})},s=t(n);return n(),()=>{r=!0,s()}},[e,t]),s}}}]);